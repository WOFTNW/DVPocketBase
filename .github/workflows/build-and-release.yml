name: Build and Release

on:
  push:
    branches: [main, master]
    tags: ["v*"]
  pull_request:
    branches: [main, master]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.23.4" # Update to match your actual Go version

      - name: Build for Linux
        if: matrix.os == 'ubuntu-latest'
        run: go build -v -o dvpocketbase-linux ./main.go

      - name: Build for Windows
        if: matrix.os == 'windows-latest'
        run: go build -v -o dvpocketbase-windows.exe ./main.go

      - name: Test
        run: go test -v ./...

      - name: Upload Linux Artifact
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: dvpocketbase-linux
          path: dvpocketbase-linux

      - name: Upload Windows Artifact
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: dvpocketbase-windows
          path: dvpocketbase-windows.exe

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3

      - name: Download Linux Artifact
        uses: actions/download-artifact@v4
        with:
          name: dvpocketbase-linux
          path: .

      - name: Download Windows Artifact
        uses: actions/download-artifact@v4
        with:
          name: dvpocketbase-windows
          path: .

      - name: Make Linux binary executable
        run: chmod +x dvpocketbase-linux

      - name: Extract version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false
          files: |
            dvpocketbase-linux
            dvpocketbase-windows.exe
          body: |
            Release ${{ steps.get_version.outputs.VERSION }} of DVPocketBase

            ## Downloads
            - [Linux Binary](dvpocketbase-linux)
            - [Windows Binary](dvpocketbase-windows.exe)
